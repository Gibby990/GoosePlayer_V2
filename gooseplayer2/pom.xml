<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.gooseplayer2</groupId>
    <artifactId>gooseplayer2</artifactId>
    <version>1.1.4</version>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>

        <repository>
            <id>clojars</id>
            <url>https://clojars.org/repo</url>
        </repository>

    </repositories>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.release>17</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- For test versions -->
        <mockito.version>5.12.0</mockito.version>
        <jacoco.version>0.8.12</jacoco.version>
    </properties>

    <dependencies>
    
        <dependency>
            <groupId>net.beadsproject</groupId>
            <artifactId>beads</artifactId>
            <version>3.2</version>
        </dependency>

        
        <dependency>
            <groupId>com.googlecode.soundlibs</groupId>
            <artifactId>mp3spi</artifactId>
            <version>1.9.5.4</version>
        </dependency>

        <dependency>
            <groupId>org.jflac</groupId>
            <artifactId>jflac-codec</artifactId>
            <version>1.5.2</version>
        </dependency>

        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf</artifactId>
            <version>3.5.1</version> 
        </dependency>

        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf-intellij-themes</artifactId>
            <version>3.5.1</version>
        </dependency>

        <dependency>
            <groupId>net.jthink</groupId>
            <artifactId>jaudiotagger</artifactId>
            <version>3.0.1</version>
        </dependency>
        
        <!-- Test Dependencies (added for unit/integration testing) -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.2</version>             
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>5.2.0</version>
            <scope>test</scope>
        </dependency>
        <!-- AssertJ-Swing Core might not keep -->
           <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.27.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>tokyo.northside</groupId>
            <artifactId>assertj-swing</artifactId>
            <version>4.0.0-beta-3</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>tokyo.northside</groupId>
            <artifactId>assertj-swing-junit-jupiter</artifactId>
            <version>4.0.0-beta-3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.txt</include>
                    <include>**/*.png</include>
                    <include>**/*.ico</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>jar-with-dependencies</shadedClassifierName>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.gooseplayer2.Main</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- potentially a duplicate?
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>prepare-dist-dir</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/dist"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin> 
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <id>run-jlink</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${java.home}/bin/jlink</executable>
                            <arguments>
                                <argument>--strip-debug</argument>
                                <argument>--no-header-files</argument>
                                <argument>--no-man-pages</argument>
                                <argument>--compress</argument>
                                <argument>2</argument>
                                <argument>--module-path</argument>
                                <argument>${java.home}/jmods</argument>
                                <argument>--add-modules</argument>
                                <argument>java.se</argument>
                                <argument>--output</argument>
                                <argument>${project.build.directory}/dist/jre</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>prepare-dist</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/dist"/>
                                <copy file="${project.build.directory}/${project.artifactId}-${project.version}-jar-with-dependencies.jar" todir="${project.build.directory}/dist" overwrite="true"/>
                                <copy todir="${project.build.directory}/dist/Library" overwrite="true">
                                    <fileset dir="${project.basedir}/src/Library" erroronmissingdir="false"/>
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.akathist.maven.plugins.launch4j</groupId>
                <artifactId>launch4j-maven-plugin</artifactId>
                <version>2.1.2</version>
                <executions>
                    <execution>
                        <id>l4j-clui</id>
                        <phase>package</phase>
                        <goals>
                            <goal>launch4j</goal>
                        </goals>
                        <configuration>
                            <headerType>gui</headerType>
                            <jar>${project.build.directory}/dist/${project.artifactId}-${project.version}-jar-with-dependencies.jar</jar>
                            <outfile>${project.build.directory}/dist/GoosePlayer2.exe</outfile>
                            <downloadUrl>https://adoptium.net/</downloadUrl>
                            <classPath>
                                <mainClass>com.gooseplayer2.Main</mainClass>
                            </classPath>
                            <icon>${project.basedir}/src/main/resources/icons/Icon.ico</icon>
                            <jre>
                                <minVersion>17</minVersion>
                                <jdkPreference>preferJre</jdkPreference>
                                <path>jre</path>
                            </jre>
                            <versionInfo>
                                <fileVersion>1.1.0.0</fileVersion>
                                <txtFileVersion>${project.version}</txtFileVersion>
                                <fileDescription>${project.name}</fileDescription>
                                <copyright>2024 GoosePlayer2</copyright>
                                <productVersion>1.1.0.0</productVersion>
                                <txtProductVersion>1.1.0.0</txtProductVersion>
                                <productName>${project.name}</productName>
                                <companyName>GoosePlayer2</companyName>
                                <internalName>gooseplayer2</internalName>
                                <originalFilename>GoosePlayer2.exe</originalFilename>
                            </versionInfo>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Testing Plugins -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <!--argLine>-Djava.awt.headless=false</argLine> override-->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
        </plugins>
    </build>

</project>